version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ptp-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-personal_trainer_planner}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ptp-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-personal_trainer_planner}?schema=public

      # Authentication
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}

      # Email Configuration
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}

      # Branding
      PT_BRAND_NAME: ${PT_BRAND_NAME}
      NEXT_PUBLIC_PT_FIRST_NAME: ${NEXT_PUBLIC_PT_FIRST_NAME}

      # Optional: Google Calendar
      GOOGLE_CALENDAR_ID: ${GOOGLE_CALENDAR_ID:-}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${GOOGLE_SERVICE_ACCOUNT_EMAIL:-}
      GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY: ${GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY:-}
      TIME_ZONE: ${TIME_ZONE:-Europe/London}

      # Optional: Contentful
      CONTENTFUL_SPACE_ID: ${CONTENTFUL_SPACE_ID:-}
      CONTENTFUL_ACCESS_TOKEN: ${CONTENTFUL_ACCESS_TOKEN:-}
      CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN: ${CONTENTFUL_MANAGEMENT_API_ACCESS_TOKEN:-}

      # Optional: Sentry
      SENTRY_DSN: ${SENTRY_DSN:-}
      NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN:-}
      SENTRY_ORG: ${SENTRY_ORG:-}
      SENTRY_PROJECT: ${SENTRY_PROJECT:-}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN:-}
    ports:
      - '3000:3000'
    volumes:
      # Optional: Mount for development
      # - ./prisma:/app/prisma
      # - ./public:/app/public
      - app_uploads:/app/public/uploads
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/api/health', (r) =>
          {r.statusCode === 200 ? process.exit(0) : process.exit(1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local

networks:
  default:
    name: ptp-network
