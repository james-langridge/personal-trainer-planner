// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  admin     Boolean   @default(false)
  createdAt DateTime  @default(now())
  password  String
  updatedAt DateTime  @updatedAt
  workouts  Workout[]

  // Auth.js fields
  accounts      Account[]
  email         String    @unique
  emailVerified DateTime?
  id            String    @id @default(uuid())
  image         String?
  name          String?
  sessions      Session[]
}

model Workout {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  status      WORKOUT_STATUS @default(NOT_STARTED)
  name        String
  date        DateTime
  description String?
  videoUrl    String?
  type        WORKOUT_TYPE   @default(TRAINING)
  deleted     Boolean        @default(false)

  @@index([ownerId, id])
}

enum WORKOUT_STATUS {
  NOT_STARTED
  COMPLETED
}

enum WORKOUT_TYPE {
  TRAINING
  APPOINTMENT
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
