name: Playwright Tests

on:
  pull_request:
    branches: [main]

jobs:
  run-e2es:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.0-jammy

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      - name: Set up database
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/testdb
        run: |
          npx prisma migrate deploy
          npx prisma db seed
      - name: Build application
        run: |
          NEXT_TELEMETRY_DISABLED=1 NODE_ENV=production npm run build --no-lint
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/testdb
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}

      - name: Start server
        run: |
          npm run start &
          npx wait-on http://localhost:3000 -t 60000
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/testdb
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}

      - name: Run tests
        run: npx playwright test
        env:
          HOME: /root
          DATABASE_URL: postgres://postgres:postgres@postgres:5432/testdb
          BASE_URL: http://localhost:3000

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
